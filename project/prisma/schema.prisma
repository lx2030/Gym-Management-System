// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id              String         @id @default(uuid())
  name            String
  email           String?        @unique
  password        String?
  role            String         @default("user") // admin or user
  gender          String         // male or female
  phone           String
  birthDate       DateTime?
  emergencyContact String
  address         String
  notes           String?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  subscriptions   Subscription[]
  transactions    Transaction[]
}

model Package {
  id           String         @id @default(uuid())
  name         String
  description  String
  price        Float
  duration     Int           // in days
  category     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  subscriptions Subscription[]
}

model Subscription {
  id            String    @id @default(uuid())
  user          User      @relation(fields: [userId], references: [id])
  userId        String
  package       Package   @relation(fields: [packageId], references: [id])
  packageId     String
  startDate     DateTime
  endDate       DateTime
  status        String    // active, expired, pending
  paymentStatus String    // paid, pending, failed
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Transaction {
  id          String    @id @default(uuid())
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
  type        String    // subscription, product, delivery, expense
  amount      Float
  date        DateTime
  description String
  category    String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id          String    @id @default(uuid())
  name        String
  price       Float
  stock       Int
  category    String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}